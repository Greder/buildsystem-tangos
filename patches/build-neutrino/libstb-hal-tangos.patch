--- libstb-hal-tangos.org/common/Makefile.am
+++ libstb-hal-tangos/common/Makefile.am
@@ -1,6 +1,6 @@
 noinst_LTLIBRARIES = libcommon.la
 
-AM_CXXFLAGS = -fno-rtti -fno-exceptions -fno-strict-aliasing
+AM_CXXFLAGS = -fno-rtti -fno-exceptions -fno-strict-aliasing -std=c++11
 
 AM_CXXFLAGS += \
 	-I $(top_srcdir)/include
--- libstb-hal-tangos.org/include/cs_frontpanel.h
+++ libstb-hal-tangos/include/cs_frontpanel.h
@@ -9,9 +9,14 @@
 #define VFDICONDISPLAYONOFF  0xc0425a0a
 #define VFDDISPLAYWRITEONOFF 0xc0425a05
 
+#define VFDSETRF             0xc0425af7
+#if !defined (BOXMODEL_ADB_BOX)
 #define VFDCLEARICONS        0xc0425af6
-#define VFDSETRF             0xc0425af7
 #define VFDSETFAN            0xc0425af8
+#else
+#define VFDSETFAN            0xc0425af6
+#define VFDLEDBRIGHTNESS     0xc0425af8
+#endif
 #define VFDGETWAKEUPMODE     0xc0425af9
 #define VFDGETTIME           0xc0425afa
 #define VFDSETTIME           0xc0425afb
@@ -28,7 +33,7 @@
 
 typedef enum {
 #if defined(BOXMODEL_OCTAGON1008)
-	ICON_DOLBY = 0x10,
+	ICON_DOLBY = 1,
 	ICON_DTS,
 	ICON_VIDEO,
 	ICON_AUDIO,
@@ -49,6 +54,7 @@
 	ICON_PLAY,
 	ICON_REWIND,
 	ICON_PAUSE,
+	ICON_NONE,
 	ICON_FF,
 	ICON_REC,
 	ICON_ARROW,
@@ -56,15 +62,16 @@
 	ICON_COLON2,
 	ICON_COLON3,
 	ICON_MAX,
+	FP_ICON_MIN = ICON_DOLBY,
 	FP_ICON_USB = ICON_USB,
 	FP_ICON_HD = ICON_16_9,
 	FP_ICON_HDD = ICON_HDD,
 	FP_ICON_LOCK = ICON_CRYPTED,
-	FP_ICON_BT,
-	FP_ICON_MP3,
-	FP_ICON_MUSIC,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
 	FP_ICON_DD = ICON_DOLBY,
-	FP_ICON_MAIL,
+	FP_ICON_MAIL = 0,
 	FP_ICON_MUTE = ICON_TIME,
 	FP_ICON_PLAY = ICON_PLAY,
 	FP_ICON_PAUSE = ICON_PAUSE,
@@ -72,18 +79,153 @@
 	FP_ICON_FR = ICON_REWIND,
 	FP_ICON_REC = ICON_REC,
 	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_TIMESHIFT = 0,
 	FP_ICON_RADIO = ICON_AUDIO,
 	FP_ICON_TV = ICON_VIDEO,
 	FP_ICON_DOWNLOAD = ICON_LINK,
 	FP_ICON_CAM1 = ICON_REC,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7420) \
+ || defined(BOXMODEL_HS7429)
+	ICON_DOT = 1,
+	ICON_COLON1,
+	ICON_COLON2,
+	ICON_COLON3,
+	ICON_MAX,
+	FP_ICON_MIN = ICON_DOT,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7119)
+	ICON_COLON = 1,     // 01
+	FP_ICON_MIN = ICON_COLON,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_COLON
+#elif defined(BOXMODEL_ATEVIO7500)
+	ICON_STANDBY = 1, // 01
+	ICON_REC,         // 02
+	ICON_TIMESHIFT,   // 03
+	ICON_TIMER,       // 04
+	ICON_HD,          // 05
+	ICON_USB,         // 06
+	ICON_SCRAMBLED,   // 07
+	ICON_DOLBY,       // 08
+	ICON_MUTE,        // 09
+	ICON_TUNER1,      // 10
+	ICON_TUNER2,      // 11
+	ICON_MP3,         // 12
+	ICON_REPEAT,      // 13
+	ICON_PLAY,        // 14
+	ICON_STOP,        // 15
+	ICON_PAUSE,       // 16
+	ICON_REWIND,      // 17
+	ICON_FF,          // 18
+	ICON_STEP_BACK,   // 19
+	ICON_STEP_FWD,    // 20
+	ICON_TV,          // 21
+	ICON_RADIO,       // 22
+	ICON_MAX,         // 23
+	ICON_SPINNER,     // 24
+	FP_ICON_MIN = ICON_STANDBY,
+	FP_ICON_USB = ICON_USB,
+	FP_ICON_HD = ICON_HD,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = ICON_SCRAMBLED,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = ICON_MP3,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = ICON_DOLBY,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = ICON_MUTE,
+	FP_ICON_PLAY = ICON_PLAY,
+	FP_ICON_PAUSE = ICON_PAUSE,
+	FP_ICON_FF = ICON_FF,
+	FP_ICON_FR = ICON_REWIND,
+	FP_ICON_REC = ICON_REC,
+	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_TIMESHIFT = ICON_TIMESHIFT,
+	FP_ICON_RADIO = ICON_RADIO,
+	FP_ICON_TV = ICON_TV,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7810A) \
+ || defined(BOXMODEL_HS7819)
+	ICON_COLON = 1, // 01
+	ICON_PERIOD1,   // 02
+	ICON_PERIOD2,   // 03
+	ICON_PERIOD3,   // 04
+	ICON_MAX,       // 05
+	FP_ICON_MIN = ICON_COLON,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
 #elif defined(BOXMODEL_FORTIS_HDBOX)
-	ICON_USB = 0x10,
-	ICON_STANDBY,
+	ICON_STANDBY = 1,
 	ICON_SAT,
 	ICON_REC,
 	ICON_TIMESHIFT,
 	ICON_TIMER,
 	ICON_HD,
+	ICON_USB,
 	ICON_SCRAMBLED,
 	ICON_DOLBY,
 	ICON_MUTE,
@@ -92,15 +234,6 @@
 	ICON_MP3,
 	ICON_REPEAT,
 	ICON_Play,
-	ICON_TER,
-	ICON_FILE,
-	ICON_480i,
-	ICON_480p,
-	ICON_576i,
-	ICON_576p,
-	ICON_720p,
-	ICON_1080i,
-	ICON_1080p,
 	ICON_Circ0,
 	ICON_Circ1,
 	ICON_Circ2,
@@ -110,6 +243,15 @@
 	ICON_Circ6,
 	ICON_Circ7,
 	ICON_Circ8,
+	ICON_FILE,
+	ICON_TER,
+	ICON_480i,
+	ICON_480p,
+	ICON_576i,
+	ICON_576p,
+	ICON_720p,
+	ICON_1080i,
+	ICON_1080p,
 	ICON_COLON1,
 	ICON_COLON2,
 	ICON_COLON3,
@@ -117,6 +259,7 @@
 	ICON_TV,
 	ICON_RADIO,
 	ICON_MAX,
+	FP_ICON_MIN = ICON_STANDBY,
 	FP_ICON_USB = ICON_USB,
 	FP_ICON_REC = ICON_REC,
 	FP_ICON_CAM1 = ICON_REC,
@@ -138,8 +281,87 @@
 	FP_ICON_TV = ICON_TV,
 	FP_ICON_MUSIC = ICON_RADIO,
 	FP_ICON_MAX = ICON_MAX
-#elif defined(BOXMODEL_UFS910) || defined(BOXMODEL_UFS922) || defined(BOXMODEL_UFS912) || defined(BOXMODEL_UFS913)
+#elif defined(BOXMODEL_TF7700)
+	ICON_CD1 = 32,
+	ICON_CD2,
+	ICON_CD3,
+	ICON_CD4,
+	ICON_CD5,
+	ICON_CD6,
+	ICON_CD7,
+	ICON_CD8,
+	ICON_CD9,
+	ICON_CDCENTER,
+	ICON_HDD = 48,
+	ICON_HDD_1,
+	ICON_HDD_2,
+	ICON_HDD_3,
+	ICON_HDD_4,
+	ICON_HDD_5,
+	ICON_HDD_6,
+	ICON_HDD_7,
+	ICON_HDD_8,
+	ICON_HDD_FRAME,
+	ICON_HDD_FULL,
+	ICON_MP3 = 64,
+	ICON_AC3,
+	ICON_TIMESHIFT,
+	ICON_TV,
+	ICON_MUSIC,
+	ICON_DISH,
+	ICON_REC,
+	ICON_TUNER1,
+	ICON_TUNER2,
+	ICON_RWD,
+	ICON_STEPBACK,
+	ICON_PLAY,
+	ICON_STEPFWD,
+	ICON_FWD,
+	ICON_PAUSE,
+	ICON_MUTE,
+	ICON_AUTOREWLEFT,
+	ICON_AUTOREWRIGHT,
+	ICON_DOLLAR,
+	ICON_ATTN,
+	ICON_DOLBY,
+	ICON_NETWORK,
+	ICON_AM,
+	ICON_TIMER,
+	ICON_PM,
+	ICON_IRDOT,
+	ICON_POWER,
+	ICON_COLON,
+	ICON_MAX,
+	FP_ICON_MIN = ICON_CD1,
+	FP_ICON_USB = 0,
+	FP_ICON_REC = ICON_REC,
+	FP_ICON_RECORD = ICON_REC,
+	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_HD = ICON_NETWORK,
+	FP_ICON_LOCK = ICON_DOLLAR,
+	FP_ICON_DD = ICON_DOLBY,
+	FP_ICON_MUTE = ICON_MUTE,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = ICON_MP3,
+	FP_ICON_PLAY = ICON_PLAY,
+	FP_ICON_PAUSE = ICON_PAUSE,
+	FP_ICON_HDD = 0,
+	FP_ICON_MUSIC = ICON_MUSIC,
+	FP_ICON_MAIL = 0,
+	FP_ICON_FF = ICON_FWD,
+	FP_ICON_FR = ICON_RWD,
+	FP_ICON_RADIO = ICON_MUSIC,
+	FP_ICON_TV = ICON_TV,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_TIMESHIFT = ICON_TIMESHIFT,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_UFS910) \
+ || defined(BOXMODEL_UFS922) \
+ || defined(BOXMODEL_UFS912) \
+ || defined(BOXMODEL_UFS913)
 	FP_ICON_USB = 0x10,
+	FP_ICON_MIN= FP_ICON_USB,
 	FP_ICON_HD,
 	FP_ICON_HDD,
 	FP_ICON_LOCK,
@@ -162,7 +384,8 @@
 	FP_ICON_RECORD = FP_ICON_REC,
 	FP_ICON_DOWNLOAD = 0,
 	FP_ICON_TIMESHIFT = 0
-#elif defined(BOXMODEL_IPBOX9900) || defined(BOXMODEL_IPBOX99)
+#elif defined(BOXMODEL_IPBOX9900) \
+   || defined(BOXMODEL_IPBOX99)
 	ICON_STANDBY,
 	ICON_SAT,
 	ICON_REC,
@@ -205,22 +428,151 @@
 	FP_ICON_MUSIC      = FP_ICON_RADIO,
 	FP_ICON_DD         = 0x04,
 	FP_ICON_REC        = 0x03,
-	FP_ICON_FF = 0,
-	FP_ICON_FR = 0,
-	FP_ICON_USB = 0,
+	FP_ICON_FF         = 0,
+	FP_ICON_FR         = 0,
+	FP_ICON_USB        = 0,
+	FP_ICON_HDD        = 0,
+	FP_ICON_MUTE       = 0,
+	FP_ICON_CLOCK      = 0,
+	FP_ICON_CAM1       = 0,
+	FP_ICON_LOCK       = 0,
+	FP_ICON_DOWNLOAD   = 0,
+	FP_ICON_TIMESHIFT  = FP_ICON_REC,
+	FP_ICON_TV         = 0,
+	FP_ICON_MAIL       = 0,
+	FP_ICON_BT         = 0,
+#elif defined(BOXMODEL_ADB_BOX)
+	ICON_REC = 1,   // 01
+	ICON_TIMESHIFT, // 02
+	ICON_TIMER,     // 03
+	ICON_HD,        // 04
+	ICON_USB,       // 05
+	ICON_SCRAMBLED, // 06
+	ICON_DOLBY,     // 07
+	ICON_MUTE,      // 08
+	ICON_TUNER1,    // 09
+	ICON_TUNER2,    // 10
+	ICON_MP3,       // 11
+	ICON_REPEAT,    // 12
+	ICON_PLAY,      // 13
+	ICON_STOP,      // 14
+	ICON_PAUSE,     // 15
+	ICON_REWIND,    // 16
+	ICON_FF,        // 17
+	ICON_STEP_BACK, // 18
+	ICON_STEP_FWD,  // 19
+	ICON_TV,        // 20
+	ICON_RADIO,     // 21
+	FP_ICON_MIN = ICON_REC,
+	FP_ICON_USB = ICON_USB,
+	FP_ICON_REC = ICON_REC,
+//	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_HD = ICON_HD,
+	FP_ICON_LOCK = ICON_SCRAMBLED,
+	FP_ICON_DD = ICON_DOLBY,
+	FP_ICON_MUTE = ICON_MUTE,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = ICON_MP3,
+	FP_ICON_PLAY = ICON_PLAY,
+	FP_ICON_PAUSE = ICON_PAUSE,
 	FP_ICON_HDD = 0,
-	FP_ICON_MUTE = 0,
-	FP_ICON_CLOCK = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_FF = ICON_FF,
+	FP_ICON_FR = ICON_REWIND,
+	FP_ICON_RADIO = ICON_RADIO,
+	FP_ICON_TV = ICON_TV,
 	FP_ICON_CAM1 = 0,
-	FP_ICON_LOCK = 0,
 	FP_ICON_DOWNLOAD = 0,
-	FP_ICON_TIMESHIFT  = FP_ICON_REC,
-	FP_ICON_TV = 0,
-	FP_ICON_MAIL = 0,
-	FP_ICON_BT = 0,
-
+	FP_ICON_LOCK       = 0,
+	FP_ICON_TIMESHIFT = ICON_TIMESHIFT,
+	FP_ICON_MAX = ICON_RADIO + 1
+#elif defined(BOXMODEL_VIP2) \
+ ||   defined(BOXMODEL_VIP1_V1) \
+ ||   defined(BOXMODEL_VIP1_V2) \
+ ||   defined(BOXMODEL_HL101)
+	ICON_REWIND = 1,
+	ICON_MIN = ICON_REWIND,
+	ICON_PLAY_STEPBACK,
+	ICON_PLAY,
+	ICON_PLAY_STEP,
+	ICON_FASTFORWARD,
+	ICON_PAUSE,
+	ICON_REC1,
+	ICON_MUTE,
+	ICON_REPEAT,
+	ICON_DOLBY,
+	ICON_CA,
+	ICON_CI,
+	ICON_USB,
+	ICON_DOUBLESCREEN,
+	ICON_REC2,
+	ICON_HDD_A8,
+	ICON_HDD_A7,
+	ICON_HDD_A6,
+	ICON_HDD_A5,
+	ICON_HDD_A4,
+	ICON_HDD_A3,
+	ICON_HDD_FULL,
+	ICON_HDD_A2,
+	ICON_HDD_A1,
+	ICON_MP3,
+	ICON_AC3,
+	ICON_TVMODE,
+	ICON_AUDIO,
+	ICON_ALERT,
+	ICON_HDD_GRID,
+	ICON_CLOCK_PM,
+	ICON_CLOCK_AM,
+	ICON_TIMER,
+	ICON_TIME_COLON,
+	ICON_DOT2,
+	ICON_STANDBY,
+	ICON_TER,
+	ICON_DISK_S3,
+	ICON_DISK_S2,
+	ICON_DISK_S1,
+	ICON_DISK_CIRCLE,
+	ICON_SAT,
+	ICON_TIMESHIFT,
+	ICON_DOT1,
+	ICON_CABLE,
+	ICON_MAX = ICON_CABLE,
+	FP_ICON_MIN        = ICON_MIN,
+	FP_ICON_480P       = 0,
+	FP_ICON_480I       = 0,
+	FP_ICON_576P       = 0,
+	FP_ICON_576I       = 0,
+	FP_ICON_PLAY       = ICON_PLAY,
+	FP_ICON_PAUSE      = ICON_PAUSE,
+	FP_ICON_1080P      = 0,
+	FP_ICON_1080I      = 0,
+	FP_ICON_720P       = 0,
+	FP_ICON_POWER      = ICON_STANDBY,
+	FP_ICON_HD         = ICON_DOUBLESCREEN,
+	FP_ICON_RADIO      = ICON_AUDIO,
+	FP_ICON_MP3        = ICON_MP3,
+	FP_ICON_MUSIC      = ICON_AUDIO,
+	FP_ICON_DD         = ICON_DOLBY,
+	FP_ICON_REC        = ICON_REC1,
+	FP_ICON_FF         = ICON_FASTFORWARD,
+	FP_ICON_FR         = ICON_REWIND,
+	FP_ICON_USB        = ICON_USB,
+	FP_ICON_HDD        = ICON_HDD_GRID,
+	FP_ICON_MUTE       = ICON_MUTE,
+	FP_ICON_CLOCK      = ICON_TIMER,
+	FP_ICON_CAM1       = ICON_REC1,
+	FP_ICON_LOCK       = ICON_CA,
+	FP_ICON_DOWNLOAD   = 0,
+	FP_ICON_TIMESHIFT  = ICON_TIMESHIFT,
+	FP_ICON_TV         = ICON_TVMODE,
+	FP_ICON_MAIL       = 0,
+	FP_ICON_BT         = 0,
+	FP_ICON_MAX        = ICON_MAX,
 #else
 	FP_ICON_USB = 0x10,
+	FP_ICON_MIN = FP_ICON_USB,
 	FP_ICON_HD,
 	FP_ICON_HDD,
 	FP_ICON_LOCK,
@@ -242,8 +594,21 @@
 	FP_ICON_RECORD = FP_ICON_REC,
 	FP_ICON_DOWNLOAD,
 	FP_ICON_TIMESHIFT,
+#if 0
+ if !defined(BOXMODEL_UFS910)
+ && !defined(BOXMODEL_UFS922)
+ && !defined(BOXMODEL_UFS912)
+ && !defined(BOXMODEL_UFS913)
+ && !defined(BOXMODEL_FORTIS_HDBOX)
+ && !defined(BOXMODEL_TF7700)
+ && !defined(BOXMODEL_UFS910)
+ && !defined(BOXMODEL_UFS922)
+ && !defined(BOXMODEL_UFS912)
+ && !defined(BOXMODEL_UFS913)
+ && !defined(BOXMODEL_IPBOX9900)
+ && !defined(BOXMODEL_IPBOX99)
+ && !defined(BOXMODEL_ADB_BOX)
 #endif
-#if !defined(BOXMODEL_UFS910) && !defined(BOXMODEL_UFS922) && !defined(BOXMODEL_UFS912) && !defined(BOXMODEL_UFS913) && !defined(BOXMODEL_FORTIS_HDBOX)
 	FP_ICON_MAX
 #endif
 } fp_icon;
@@ -251,7 +616,7 @@
 typedef enum {
 	FP_FLAG_NONE			= 0x00,
 	FP_FLAG_SCROLL_ON		= 0x01,	/* switch scrolling on */
-	FP_FLAG_SCROLL_LTR		= 0x02,	/* scroll from left to rightinstead of default right to left direction (i.e. for arabic text) */
+	FP_FLAG_SCROLL_LTR		= 0x02,	/* scroll from left to right instead of default right to left direction (i.e. for arabic text) */
 	FP_FLAG_SCROLL_SIO		= 0x04,	/* start/stop scrolling with empty screen (scroll in/out) */
 	FP_FLAG_SCROLL_DELAY		= 0x08,	/* delayed scroll start */
 	FP_FLAG_ALIGN_LEFT		= 0x10,	/* align the text in display from the left (default) */
@@ -259,7 +624,8 @@
 	FP_FLAG_UPDATE_SCROLL_POS	= 0x40,	/* update the current position for scrolling */
 } fp_flag;
 
-typedef struct {
+typedef struct
+{
 	unsigned char		brightness;
 	unsigned char		flags;
 	unsigned char		current_hour;
@@ -268,22 +634,27 @@
 	unsigned char		timer_minutes_lo;
 } fp_standby_data_t;
 
-typedef enum {
+typedef enum
+{
 	FP_LED_1_ON		= 0x81,
 	FP_LED_2_ON		= 0x82,
 	FP_LED_3_ON		= 0x83,
+	FP_LED_4_ON		= 0x84,
 	FP_LED_1_OFF		= 0x01,
 	FP_LED_2_OFF		= 0x02,
 	FP_LED_3_OFF		= 0x03,
+	FP_LED_4_OFF		= 0x04,
 } fp_led_ctrl_t;
 
-typedef struct {
+typedef struct
+{
 	unsigned char		source;
 	unsigned char		time_minutes_hi;
 	unsigned char		time_minutes_lo;
 } fp_wakeup_data_t;
 
-typedef enum {
+typedef enum
+{
 	FP_WAKEUP_SOURCE_TIMER  = 0x01,
 	FP_WAKEUP_SOURCE_BUTTON = 0x02,
 	FP_WAKEUP_SOURCE_REMOTE = 0x04,
@@ -291,25 +662,29 @@
 	FP_WAKEUP_SOURCE_POWER  = 0xFF
 } fp_wakeup_source;
 
-typedef struct {
+typedef struct
+{
 	unsigned short		addr;
 	unsigned short		cmd;
 } fp_standby_cmd_data_t;
 
-typedef enum {
+typedef enum
+{
 	FP_DISPLAY_TEXT_NONE	= 0,
 	FP_DISPLAY_TEXT_LIMITED,
 	FP_DISPLAY_TEXT_ALL,
 } fp_display_text_type_t;
 
-typedef enum {
+typedef enum
+{
 	FP_DISPLAY_TYPE_NONE	= 0,
 	FP_DISPLAY_TYPE_VFD,
 	FP_DISPLAY_TYPE_OLED,
 	FP_DISPLAY_TYPE_LED_SEGMENT
 } fp_display_type_t;
 
-typedef struct {
+typedef struct
+{
 	fp_display_type_t	display_type;
 	unsigned short		xres, yres;
 	unsigned int		segment_count;
--- libstb-hal-tangos.org/libduckbox/hardware_caps.c
+++ libstb-hal-tangos/libduckbox/hardware_caps.c
@@ -39,8 +39,8 @@
 	if (len > 0) {
 		buf[len] = 0;
 		if (!strncmp(buf, "atevio7500", 10)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "HS8200");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -52,8 +52,8 @@
 			caps.display_xres = 12;
 		}
 		else if (!strncmp(buf, "ufs912", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Kathrein");
+			strcpy(caps.boxname, "UFS912");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -65,8 +65,8 @@
 			caps.display_xres = 16;
 		}
 		else if (!strncmp(buf, "ufs913", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Kathrein");
+			strcpy(caps.boxname, "UFS913");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -78,8 +78,8 @@
 			caps.display_xres = 16;
 		}
 		else if (!strncmp(buf, "ufs922", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Kathrein");
+			strcpy(caps.boxname, "UFS922");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -91,8 +91,8 @@
 			caps.display_xres = 16;
 		}
 		else if (!strncmp(buf, "ufs910", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Kathrein");
+			strcpy(caps.boxname, "UFS910");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -104,8 +104,8 @@
 			caps.display_xres = 16;
 		}
 		else if (!strncmp(buf, "hdbox", 5)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "FS9000/9200");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -117,8 +117,8 @@
 			caps.display_xres = 12;
 		}
 		else if (!strncmp(buf, "octagon1008", 11)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "HS9510");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -130,35 +130,61 @@
 			caps.display_xres = 8;
 		}
 		else if (!strncmp(buf, "hs7110", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
-			caps.can_shutdown = 1;
-			caps.has_HDMI = 1;
-			caps.has_SCART = 1;
-			caps.can_cec = 1;
-			caps.has_fan = 0;
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "HS7110");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_fan = 0;
+		}
+		else if (!strncmp(buf, "hs7420", 6)) {
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "HS7420");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_fan = 0;
+			caps.display_can_set_brightness = 1;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_xres = 8;
 		}
 		else if (!strncmp(buf, "hs7810a", 7)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
-			caps.can_shutdown = 1;
-			caps.has_HDMI = 1;
-			caps.has_SCART = 1;
-			caps.can_cec = 1;
-			caps.has_fan = 0;
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "HS7810A");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_fan = 0;
+			caps.display_can_set_brightness = 1;
 		}
 		else if (!strncmp(buf, "hs7119", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
-			caps.can_shutdown = 1;
-			caps.has_HDMI = 1;
-			caps.has_SCART = 1;
-			caps.can_cec = 1;
-			caps.has_fan = 0;
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "HS7119");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.has_fan = 0;
+			caps.display_can_set_brightness = 1;
+		}
+		else if (!strncmp(buf, "hs7429", 6)) {
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "HS7429");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_CI = 2;
+			caps.has_fan = 0;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_can_set_brightness = 1;
+			caps.display_xres = 8;
 		}
 		else if (!strncmp(buf, "hs7819", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "HS7819");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -166,27 +192,33 @@
 			caps.has_fan = 0;
 		}
 		else if (!strncmp(buf, "dp7000", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
-			caps.can_shutdown = 1;
-			caps.has_HDMI = 1;
-			caps.has_SCART = 1;
-			caps.can_cec = 1;
-			caps.has_fan = 0;
+			strcpy(caps.boxvendor, "Fortis");
+			strcpy(caps.boxname, "DP7000");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_fan = 0;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_can_set_brightness = 1;
+			caps.display_xres = 8;
 		}
 		else if (!strncmp(buf, "cuberevo-mini", 14)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
-			caps.can_shutdown = 1;
-			caps.has_HDMI = 1;
-			caps.has_SCART = 1;
-			caps.can_cec = 0;
-			caps.has_fan = 0;
-			caps.has_CI = 2;
+			strcpy(caps.boxvendor, "CubeRevo");
+			strcpy(caps.boxname, "Mini");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 0;
+			caps.has_fan = 0;
+			caps.has_CI = 2;
+			caps.display_can_set_brightness = 1;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_xres = 14;
 		}
 		else if (!strncmp(buf, "cuberevo-mini2", 14)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "CubeRevo");
+			strcpy(caps.boxname, "Mini 2");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -198,8 +230,8 @@
 			caps.display_xres = 14;
 		}
 		else if (!strncmp(buf, "cuberevo-250hd", 4)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "CubeRevo");
+			strcpy(caps.boxname, "250HD");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -208,8 +240,8 @@
 			caps.has_CI = 0;
 		}
 		else if (!strncmp(buf, "cuberevo-2000hd", 15)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "CubeRevo");
+			strcpy(caps.boxname, "2000HD");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -218,18 +250,21 @@
 			caps.has_CI = 0;
 		}
 		else if (!strncmp(buf, "cuberevo", 8)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
-			caps.can_shutdown = 1;
-			caps.has_HDMI = 1;
-			caps.has_SCART = 1;
-			caps.can_cec = 0;
-			caps.has_fan = 1;
-			caps.has_CI = 2;
+			strcpy(caps.boxvendor, "CubeRevo");
+			strcpy(caps.boxname, " ");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 0;
+			caps.has_fan = 1;
+			caps.has_CI = 2;
+			caps.display_can_set_brightness = 1;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_xres = 13;
 		}
 		else if (!strncmp(buf, "cuberevo-3000hd", 14)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "CubeRevo");
+			strcpy(caps.boxname, "3000HD");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -238,8 +273,8 @@
 			caps.has_CI = 2;
 		}
 		else if (!strncmp(buf, "ipbox9900", 9)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "ABcom");
+			strcpy(caps.boxname, "IPbox 9900");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 2;
@@ -248,8 +283,8 @@
 			caps.has_CI = 2;
 		}
 		else if (!strncmp(buf, "ipbox99", 7)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "ABcom");
+			strcpy(caps.boxname, "IPbox 99");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -258,8 +293,8 @@
 			caps.has_CI = 0;
 		}
 		else if (!strncmp(buf, "ipbox55", 7)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "ABcom");
+			strcpy(caps.boxname, "IPbox 55");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -268,18 +303,21 @@
 			caps.has_CI = 0;
 		}
 		else if (!strncmp(buf, "tf7700", 6)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
-			caps.can_shutdown = 1;
-			caps.has_HDMI = 1;
-			caps.has_SCART = 1;
-			caps.can_cec = 0;
-			caps.has_fan = 0;
-			caps.has_CI = 2;
+			strcpy(caps.boxvendor, "Topfield");
+			strcpy(caps.boxname, "TF77X0HDPVR");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 0;
+			caps.has_fan = 0;
+			caps.has_CI = 2;
+			caps.display_can_set_brightness = 1;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_xres = 8;
 		}
 		else if (!strncmp(buf, "hl101", 5)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Spiderbox");
+			strcpy(caps.boxname, "HD HL-101");
 			caps.can_shutdown = 1;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -291,9 +329,37 @@
 			caps.display_type = HW_DISPLAY_LINE_TEXT;
 			caps.display_xres = 8;
 		}
+		else if (!strncmp(buf, "vip1-v2", 7)) {
+			strcpy(caps.boxvendor, "Edision");
+			strcpy(caps.boxname, "argus VIP");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.has_SCART_input = 1;
+			caps.can_cec = 0;
+			caps.has_fan = 0;
+			caps.has_CI = 2;
+			caps.display_can_set_brightness = 1;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_xres = 8;
+		}
+		else if (!strncmp(buf, "vip2", 7)) {
+			strcpy(caps.boxvendor, "Edision");
+			strcpy(caps.boxname, "argus VIP2");
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.has_SCART_input = 1;
+			caps.can_cec = 0;
+			caps.has_fan = 0;
+			caps.has_CI = 0;
+			caps.display_can_set_brightness = 1;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_xres = 8;
+		}
 		else if (!strncmp(buf, "arivalink200", 12)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Arivalink");
+			strcpy(caps.boxname, "200");
 			caps.can_shutdown = 0;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
@@ -303,34 +369,35 @@
 			caps.display_can_set_brightness = 0;
 		}
 		else if ((!strncasecmp(buf, "nbox", 4)) ||
-				(!strncasecmp(buf, "adb_box", 7))) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			(!strncasecmp(buf, "adb_box", 7))) {
+			strcpy(caps.boxvendor, "ADB");
+			strcpy(caps.boxname, "ITI-5800S(X)");
 			caps.can_shutdown = 0;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
 			caps.can_cec = 1;
 			caps.has_fan = 1;
-			caps.has_CI = 2;
+			caps.has_CI = 0;
 			caps.display_can_set_brightness = 1;
 		}
 		else if ((!strncasecmp(buf, "sagemcom88", 10)) ||
 			(!strncasecmp(buf, "esi_88", 6)) ||
-			(!strncasecmp(buf, "esi88", 5)) ||
-			(!strncasecmp(buf, "dsi87", 5))) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			(!strncasecmp(buf, "esi88", 5))) {
+			strcpy(caps.boxvendor, "Sagemcom");
+			strcpy(caps.boxname, "Series 88");
 			caps.can_shutdown = 0;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 1;
 			caps.can_cec = 1;
 			caps.has_fan = 1;
 			caps.has_CI = 0;
-			caps.display_can_set_brightness = 1;
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_can_set_brightness = 1;
+			caps.display_xres = 15;
 		}
 		else if (!strncasecmp(buf, "dsi87", 5)) {
-			strcpy(caps.boxvendor, "DUCKBOX");
-			strcpy(caps.boxname, buf);
+			strcpy(caps.boxvendor, "Sagemcom");
+			strcpy(caps.boxname, "DSI87");
 			caps.can_shutdown = 0;
 			caps.has_HDMI = 1;
 			caps.has_SCART = 0;
--- libstb-hal-tangos.org/libeplayer3-sh4/input.cpp
+++ libstb-hal-tangos/libeplayer3-sh4/input.cpp
@@ -452,6 +452,7 @@
 	avfc->iformat->flags |= AVFMT_SEEK_TO_PTS;
 	avfc->flags = AVFMT_FLAG_GENPTS;
 	if (player->noprobe) {
+#if 0
 #if (LIBAVFORMAT_VERSION_MAJOR <  55) || \
     (LIBAVFORMAT_VERSION_MAJOR == 55 && LIBAVFORMAT_VERSION_MINOR <  43) || \
     (LIBAVFORMAT_VERSION_MAJOR == 55 && LIBAVFORMAT_VERSION_MINOR == 43 && LIBAVFORMAT_VERSION_MICRO < 100) || \
@@ -460,6 +461,8 @@
 #else
 		avfc->max_analyze_duration2 = 1;
 #endif
+#endif
+		avfc->max_analyze_duration = 1;
 		avfc->probesize = 131072;
 	}
 #if 0
--- libstb-hal-tangos/tools/spark_fp.c.org
+++ libstb-hal-tangos/tools/spark_fp.c
@@ -30,6 +30,10 @@
 #include <time.h>
 #include <unistd.h>
 #include <sys/ioctl.h>
+
+struct semaphore {
+	int dummy;
+};
 #include <aotom_main.h>
 
 #define FP_DEV "/dev/vfd"
@@ -38,7 +42,7 @@
 {
 	printf("usage spark_fp <option>\n");
 	printf("\t-g: get wakeup reason (return code == reason)\n");
-	printf("\t-T: get FP display type (1 = VFD, 2 = LCD, 4 = LED, 8 = LBD)\n");
+	printf("\t-T: get FP display type (1 = VFD, 2 = LCD, 3 = DVFD, 4 = LED, 8 = LBD)\n");
 	printf("\t-t: get current FP time\n");
 	printf("\t-s <time>: set FP time (time = 0: use current time)\n");
 	printf("\t-w <time>: set FP wakeup time (time = 1: no wakeup)\n");
@@ -129,6 +133,7 @@
 	struct aotom_ioctl_data aotom;
 	memset(&aotom, 0, sizeof(aotom));
 	int ret, c, val;
+	YWPANEL_Version_t version;
 	time_t t, t2, diff;
 	struct tm *tmp;
 	int period = LOG_ON;
@@ -245,13 +250,17 @@
 				ioctl(fd, VFDICONDISPLAYONOFF, &aotom);
 				break;
 			case 'T':
-				ret = ioctl(fd, VFDGETVERSION, &val);
+				ret = ioctl(fd, VFDGETVERSION, &version);
 				if (ret < 0)
 					perror("ioctl VFDGETVERSION");
 				else
 				{
-					printf("%d\n", val);
-					ret = val;
+					printf("Displaytype is %d\n", version.DisplayInfo);
+//					if (version.DisplayInfo == 3) //if DVFD
+//					{
+//						return 1; //return VFD
+//					}
+					ret = version.DisplayInfo;
 				}
 				break;
 // Reminder to myself, here's a semi-sane default for Pingulux boxes:
--- libstb-hal-tangos/libspark/hardware_caps.c.org
+++ libstb-hal-tangos/libspark/hardware_caps.c
@@ -14,6 +14,11 @@
 #include <string.h>
 #include <unistd.h>
 #include <sys/ioctl.h>
+
+struct semaphore
+{
+	int dummy;
+};
 #include <aotom_main.h>
 
 #include <hardware_caps.h>
@@ -35,7 +40,7 @@
 	caps.can_shutdown = 1;
 	caps.display_type = HW_DISPLAY_LED_NUM;
 	caps.display_can_set_brightness = 0;
-	caps.display_can_deepstandby = 0;
+	caps.display_can_deepstandby = 1;
 	caps.display_has_statusline = 0;
 	caps.has_HDMI = 1;
 	caps.has_SCART = 1;
@@ -43,15 +48,27 @@
 	strcpy(caps.boxvendor, "SPARK");
 	const char *tmp;
 	char buf[1024];
-	int len = -1, ret, val;
+	int len = -1, ret;
+	YWPANEL_Version_t val;
+	YWPANEL_GetTimeMode_t time_mode;
+
 	int fd = open (FP_DEV, O_RDWR);
 	if (fd != -1) {
 		ret = ioctl(fd, VFDGETVERSION, &val);
 		if (ret < 0)
 			fprintf(stderr, "[hardware_caps] %s: VFDGETVERSION %m\n", __func__);
-		else if (val & 1) { /* VFD = 1, DVFD = 3 */
+		else if (val == 1) { /* VFD = 1 */
 			caps.display_type = HW_DISPLAY_LINE_TEXT;
 			caps.display_xres = 8;
+			caps.display_can_set_brightness = 1;
+		else if (val == 3) { /* = 3 */
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			ret = ioctl(fd, VFDGETDISPLAYTIME, &time_mode);
+			caps.display_xres = (time_mode == 1 ? 10 : 16);
+			caps.display_can_set_brightness = 1;
+		else if (val == 4) { /* LED */
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			caps.display_xres = 4;
 			caps.display_can_set_brightness = 1;
 		}
 		close(fd);

